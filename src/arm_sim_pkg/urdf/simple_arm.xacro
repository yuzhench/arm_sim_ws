<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="five_joint_arm">

  <!-- 参数：连杆长度 -->
  <xacro:property name="l1" value="0.085"/>
  <xacro:property name="big_arm" value="0.35"/>
  <xacro:property name="small_arm" value="0.35"/>
  <xacro:property name="wrist" value="0.05"/>
  <xacro:property name="hand" value="0.15"/>

  <xacro:property name="small_big_joint_center_to_surface" value="0.0449"/>
  <xacro:property name="wrist_small_joint_center_to_surface" value="0.0166"/>
  <xacro:property name="wrist_arm_lenth" value="0.2009"/>
  <xacro:property name="hand_wrist_join_center_to_center" value="0.043498"/>

  <xacro:property name="pkg" value="arm_sim_pkg"/>


  <!-- <xacro:property name="l2" value="0.25"/> -->



  <link name="base_link">
    <!-- 可选：定义包名变量 -->
    <!-- <xacro:property name="pkg" value="arm_sim_pkg"/> -->

    <visual>
      <!-- 如果你的 BASE_LINKE_CP_STL.stl 在导出时 origin=joint 处，就不需要偏移 -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/BASE_LINKE_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/BASE_LINKE_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </collision>
  </link>


  <!-- 根节点：把 link1_link（由宏生成）挂到 base_link -->
  <joint name="joint_base" type="continuous">
    <parent link="base_link"/>
    <child  link="link1_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>

     <!-- 围绕 Z 轴旋转，控制底座在 XY 平面内转 -->
    <axis  xyz="0 0 -1"/>
    <limit  effort="5.0" velocity="1.0"/>
  </joint>


  <link name="link1_link">
    <!-- 可选：定义包名变量 -->
    <!-- <xacro:property name="pkg" value="arm_sim_pkg"/> -->

    <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_1_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_1_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </collision>
  </link>


  <!-- connect the link1 and big arm -->
  <joint name="joint_base_big_arm" type="revolute">
    <parent link="link1_link"/>
    <child  link="big_arm_link"/>
    <origin xyz="0 0 ${l1}" rpy="0 0 0"/>
    <axis  xyz="-1 0 0"/>
    <limit lower="-1.58" upper="1.58" effort="2.0" velocity="1.0"/>
  </joint>


   <link name="big_arm_link">
    <!-- 可选：定义包名变量 -->
    <!-- <xacro:property name="pkg" value="arm_sim_pkg"/> -->

    <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_2_BIG_ARM_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_2_BIG_ARM_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </collision>
  </link>


    <!-- joint between the big arm & small arm -->
  <joint name="joint_big_arm_small_arm" type="revolute">
    <parent link="big_arm_link"/>
    <child  link="small_arm_link"/>
    <origin xyz="-${small_big_joint_center_to_surface} 0 ${big_arm}" rpy="0 0 0"/>
    <axis  xyz="1 0 0"/>
    <limit lower="-2.8" upper="2.91" effort="2.0" velocity="1.0"/>
  </joint>

  <link name="small_arm_link">
    <!-- 可选：定义包名变量 -->
    <!-- <xacro:property name="pkg" value="arm_sim_pkg"/> -->

    <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_3_SMALL_ARM_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_3_SMALL_ARM_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </collision>
  </link>


  <!-- joint between the small arm & wrist -->
  <joint name="joint_small_arm_wrist" type="revolute">
    <parent link="small_arm_link"/>
    <child  link="wrist_link"/>
    <origin xyz="-${wrist_small_joint_center_to_surface} 0 ${small_arm}" rpy="0 0 0"/>
    <axis  xyz="-1 0 0"/>
    <limit lower="-2.66" upper="2.76" effort="2.0" velocity="1.0"/>
  </joint>


  <link name="wrist_link">
    <!-- 可选：定义包名变量 -->
    <!-- <xacro:property name="pkg" value="arm_sim_pkg"/> -->

    <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_4_WRIST_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_4_WRIST_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </collision>
  </link>


   <!-- joint between the wrist & hand -->
  <joint name="joint_wrist_hand" type="continuous">
    <parent link="wrist_link"/>
    <child  link="hand_link"/>
    <origin xyz="${hand_wrist_join_center_to_center} 0 ${wrist_arm_lenth}" rpy="0 0 0"/>
    <axis  xyz="0 0 1"/>
    <limit effort="2.0" velocity="1.0"/>
  </joint>


  <link name="hand_link">
    <!-- 可选：定义包名变量 -->
    <!-- <xacro:property name="pkg" value="arm_sim_pkg"/> -->

    <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_5_HAND_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh
          filename="package://${pkg}/meshes/LINK_5_HAND_CP_STL.stl"
          scale="1 1 1"/>
      </geometry>
    </collision>
  </link>


 <!-- ===== ros2_control 驱动定义 ===== -->

  <!-- for the fake hardware interface -->
 <!-- <ros2_control name="FiveJointHW" type="system">
    <hardware>
      <plugin>mock_components/GenericSystem</plugin>
    </hardware>
    <joint name="joint_base">
      <command_interface name="position">
        <param name="min">-3.14</param>
        <param name="max">3.14</param>
      </command_interface>
      <state_interface name="position"/>
    </joint>
    <joint name="joint_base_big_arm">
      <command_interface name="position">
        <param name="min">-1.047</param>
        <param name="max">1.047</param>
      </command_interface>
      <state_interface name="position"/>
    </joint>
    <joint name="joint_big_arm_small_arm">
      <command_interface name="position">
        <param name="min">-1.047</param>
        <param name="max">1.047</param>
      </command_interface>
      <state_interface name="position"/>
    </joint>
    <joint name="joint_small_arm_wrist">
      <command_interface name="position">
        <param name="min">-1.047</param>
        <param name="max">1.047</param>
      </command_interface>
      <state_interface name="position"/>
    </joint>
    <joint name="joint_wrist_hand">
      <command_interface name="position">
        <param name="min">-3.14</param>
        <param name="max">3.14</param>
      </command_interface>
      <state_interface name="position"/>
    </joint>
</ros2_control> -->
 

<!-- add the simulation option  -->
<xacro:arg name="simulation_mode" default="false"/>


<!-- for the real world hardware interface -->
<ros2_control name="FiveJointHW" type="system">

  <xacro:if value="$(arg simulation_mode)">
    <hardware>
      <plugin>mock_components/GenericSystem</plugin>
      <hardware>
      <plugin>mock_components/GenericSystem</plugin>
       <param name="joints">joint_base joint_base_big_arm joint_big_arm_small_arm joint_small_arm_wrist joint_wrist_hand</param>
      <param name="command_interfaces">position</param>
      <param name="state_interfaces">position,velocity</param>
      <param name="initial_positions">0 0 0 0 0</param>  
      <param name="fake_sensor_commands">true</param>    
      <param name="update_rate">200.0</param>           
    </hardware>
    </hardware> 

  </xacro:if>



  <xacro:unless value = "$(arg simulation_mode)">
    <hardware>
      <!-- 使用你的硬件插件 -->
      <plugin>arm_sim_pkg/ArmHW</plugin>

      <param name="device">/dev/ttyACM1</param>
      <param name="baudrate">1000000</param>
      <param name="joint_ids">0x01,0x02,0x03,0x04,0x05</param>
      <param name="default_acc">20.0</param>
      <param name="default_vel">20.0</param>
      <param name="allow_offline">false</param>
      <param name="send_rate_hz">200.0</param>
    </hardware>
  </xacro:unless>

  <!-- 注意：这里不要再放 min/max；物理角度上下限请在 URDF 的 <joint><limit lower/upper> 里定义 -->
  <joint name="joint_base">
    <command_interface name="position"/>
    <command_interface name="velocity"/>
    <command_interface name="acceleration"/>
    
    <state_interface   name="position"/>
    <state_interface   name="velocity"/>

  </joint>

  <joint name="joint_base_big_arm">
    <command_interface name="position"/>
    <command_interface name="velocity"/>
    <command_interface name="acceleration"/>

    <state_interface   name="position"/>
    <state_interface   name="velocity"/>

  </joint>

  <joint name="joint_big_arm_small_arm">
    <command_interface name="position"/>
    <command_interface name="velocity"/>
    <command_interface name="acceleration"/>

    <state_interface   name="position"/>
    <state_interface   name="velocity"/>

  </joint>

  <joint name="joint_small_arm_wrist">
    <command_interface name="position"/>
    <command_interface name="velocity"/>
    <command_interface name="acceleration"/>

    <state_interface   name="position"/>
    <state_interface   name="velocity"/>

  </joint>

  <joint name="joint_wrist_hand">
    <command_interface name="position"/>
    <command_interface name="velocity"/>
    <command_interface name="acceleration"/>

    <state_interface   name="position"/>
    <state_interface   name="velocity"/>

  </joint>
</ros2_control>
 


</robot>
